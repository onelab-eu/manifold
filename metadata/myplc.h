class node {
    unsigned node_id;
    unsigned last_updated;      /** Date and time when node entry was created */
    string key;                 /** (Admin only) Node key */
    string boot_state;          /** Boot state */
    site site_id;           /** Site at which this node is located */
    unsigned pcu_ids[];         /** List of PCUs that control this node */
    string node_type;           /** Node type */
    string session;             /** (Admin only) Node session value */
    string ssh_rsa_key;         /** Last known SSH host key */
    unsigned last_pcu_reboot;   /** Date and time when PCU reboot was attempted */
    unsigned node_tag_ids[];    /** List of tags attached to this node */
    boolean verified;           /** Whether the node configuration is verified correct */
    unsigned last_contact;      /** Date and time when node last contacted plc */
    unsigned peer_node_id;      /** Foreign node identifier at peer */
    hostname hostname;            /** Fully qualified hostname */
    int last_time_spent_offline;/** Length of time the node was last offline after failure and before reboot */
    unsigned conf_file_ids[];   /** List of configuration files specific to this node */
    unsigned last_time_spent_online; /** Length of time the node was last online before shutdown/failure */
    unsigned slice_ids[];       /** List of slices on this node */
    string boot_nonce;          /** (Admin only) Random value generated by the node at last boot */
    string version;             /** Apparent Boot CD version */
    unsigned last_pcu_confirmation; /** Date and time when PCU reboot was confirmed */
    unsigned last_download;     /** Date and time when node boot image was created */
    unsigned date_created;      /** Date and time when node entry was created */
    string model;               /** Make and model of the actual machine */
    unsigned peer_id;           /** Peer to which this node belongs */
    unsigned ports[];           /** List of PCU ports that this node is connected to */

    CAPABILITY(retrieve,join,selection,projection);
    KEY(node_id);
};

class site {
    unsigned last_updated;
    unsigned node_ids[];
    unsigned site_id;

    string name;
    float latitude;
    float longitude;

    CAPABILITY(retrieve,join,selection,projection);
    KEY(site_id);
};

class myplcuser {
    string email;
    boolean enabled;
    CAPABILITY(retrieve,join,selection,projection);
    KEY(email);
};
